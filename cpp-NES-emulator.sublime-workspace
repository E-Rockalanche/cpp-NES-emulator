{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"mirror",
				"mirrorNameTableVertical\tbool mirrorNameTableVertical(Byte *header)"
			],
			[
				"m_ch",
				"m_chrRam\tMemory m_chrRam"
			],
			[
				"is_poin",
				"is_pointer_v\tis_pointer_v<typename _Tp>"
			],
			[
				"F",
				"FLAGS_6\tnes::Rom::Header FLAGS_6"
			],
			[
				"s_",
				"s_paletteRamBootValues\tconst Byte s_paletteRamBootValues"
			],
			[
				"PALETT",
				"PALETTE_SIZE\tconst size_t PALETTE_SIZE"
			],
			[
				"Back",
				"ShowBackground\tnes::PPUMaskFlag ShowBackground"
			],
			[
				"render",
				"renderingEnabled\tbool renderingEnabled()"
			],
			[
				"runtime",
				"runtime_error"
			],
			[
				"setC",
				"setController"
			],
			[
				"m_spr",
				"m_spriteFlickering\tbool m_spriteFlickering"
			],
			[
				"se",
				"setMute"
			],
			[
				"set",
				"setDmcReader\tvoid setDmcReader(dmc_reader_t reader)"
			],
			[
				"POSTREN",
				"POSTRENDER_SCANLINE"
			],
			[
				"Screen",
				"ScreenWidth\tconst size_t ScreenWidth"
			],
			[
				"m_sprites",
				"m_spriteShiftLow\tRam<PRIMARY_OAM_SIZE, false> m_spriteShiftLow"
			],
			[
				"m_spritez",
				"m_spriteZeroHit\tbool m_spriteZeroHit"
			],
			[
				"m_name",
				"m_nametableLatch\tByte m_nametableLatch"
			],
			[
				"m_attr",
				"m_attributeShiftHigh\tByte m_attributeShiftHigh"
			],
			[
				"m_attrib",
				"m_attributeLatchHigh\tbool m_attributeLatchHigh"
			],
			[
				"m_attri",
				"m_attributeLatchLow\tbool m_attributeLatchLow"
			],
			[
				"m_attributeS",
				"m_attributeShiftLow\tByte m_attributeShiftLow"
			],
			[
				"m_sprit",
				"m_spriteShiftLow\tRam<PRIMARY_OAM_SIZE, false> m_spriteShiftLow"
			],
			[
				"m_bgS",
				"m_bgShiftHigh\tWord m_bgShiftHigh"
			],
			[
				"m_sprite",
				"m_spriteXCounter\tRam<PRIMARY_OAM_SIZE, false> m_spriteXCounter"
			],
			[
				"Object",
				"ObjectVariable\tObjectVariable"
			],
			[
				"m_bgL",
				"m_bgLatchLow\tByte m_bgLatchLow"
			],
			[
				"m_bgs",
				"m_bgShiftLow\tWord m_bgShiftLow"
			],
			[
				"NAMETA",
				"NAMETABLE_SIZE\tconst size_t NAMETABLE_SIZE"
			],
			[
				"increm",
				"incrementXComponent\tvoid incrementXComponent()"
			],
			[
				"m_nam",
				"m_nametableLatch\tByte m_nametableLatch"
			],
			[
				"m_bgLat",
				"m_bgLatchHigh"
			],
			[
				"clearS",
				"clearStatusFlag"
			],
			[
				"clear",
				"clearStatusFlag\tvoid clearStatusFlag(Byte flag)"
			],
			[
				"read",
				"readyToDraw\tbool readyToDraw()"
			],
			[
				"m_spriteze",
				"m_spriteZeroThisScanline\tbool m_spriteZeroThisScanline"
			],
			[
				"m_spritezero",
				"m_spriteZeroNextScanline\tbool m_spriteZeroNextScanline"
			],
			[
				"RAM",
				"RAM_SIZE\tconst size_t RAM_SIZE"
			],
			[
				"write",
				"writeByte\tvoid writeByte(int elapsed_cycles, Word address, Byte value)"
			],
			[
				"APU_",
				"APU_SIZE\tconst size_t APU_SIZE"
			],
			[
				"PPU_",
				"PPU_SIZE\tconst size_t PPU_SIZE"
			],
			[
				"wri",
				"writeToOAM"
			],
			[
				"returnFr",
				"returnFromSubroutine\tvoid returnFromSubroutine()"
			],
			[
				"Absol",
				"AbsoluteY\tnes::AddressMode AbsoluteY"
			],
			[
				"ZeroP",
				"ZeroPageY\tnes::AddressMode ZeroPageY"
			],
			[
				"Indir",
				"Indirect\tnes::AddressMode Indirect"
			],
			[
				"incremen",
				"incrementX\tvoid incrementX()"
			],
			[
				"Indire",
				"IndirectY\tnes::AddressMode IndirectY"
			],
			[
				"Indi",
				"IndirectX"
			],
			[
				"compare",
				"compareWithX\tvoid compareWithX<AddressMode Mode>()"
			],
			[
				"clearD",
				"clearInterruptDisableFlag\tvoid clearInterruptDisableFlag()"
			],
			[
				"branchOnN",
				"branchOnNotZero\tvoid branchOnNotZero()"
			],
			[
				"branch",
				"branchOnZero\tvoid branchOnZero()"
			],
			[
				"branchOnCarr",
				"branchOnCarrySet\tvoid branchOnCarrySet()"
			],
			[
				"Abs",
				"AbsoluteX\tnes::AddressMode AbsoluteX"
			],
			[
				"Ab",
				"Absolute\tnes::AddressMode Absolute"
			],
			[
				"m_st",
				"m_stackPointer"
			],
			[
				"Interr",
				"DisableInterrupts"
			],
			[
				"m_p",
				"m_programCounter"
			],
			[
				"compareW",
				"compareWithValue"
			],
			[
				"readWord",
				"readWordTick"
			],
			[
				"readByte",
				"readByteTick"
			],
			[
				"CARTR",
				"CARTRIDGE_END\tconst size_t CARTRIDGE_END"
			],
			[
				"CART",
				"CARTRIDGE_START\tconst size_t CARTRIDGE_START"
			],
			[
				"JOY",
				"JOY2\tconst size_t JOY2"
			],
			[
				"PPU_S",
				"PPU_START\tconst size_t PPU_START"
			],
			[
				"RAM_",
				"RAM_START\tconst size_t RAM_START"
			],
			[
				"m_in",
				"m_instructionCyclesCountdown\tint m_instructionCyclesCountdown"
			],
			[
				"APU_ST",
				"APU_STATUS"
			],
			[
				"m_sta",
				"m_stackPointer"
			],
			[
				"m_",
				"m_programCounter"
			],
			[
				"is_sign",
				"is_signed_v\tis_signed_v<typename _Tp>"
			],
			[
				"MetaTypeTe",
				"MetaTypeTemplate_primitive\tMetaTypeTemplate_primitive<typename T>"
			],
			[
				"MetaTypeT",
				"MetaTypeTemplate_primitive\tMetaTypeTemplate_primitive::"
			],
			[
				"Inventory",
				"InventoryComponentBlueprint\tInventoryComponentBlueprint"
			],
			[
				"EquipmentC",
				"EquipmentComponentBlueprint\tEquipmentComponentBlueprint::"
			],
			[
				"Componen",
				"ComponentPtr\tComponentPtr"
			],
			[
				"En",
				"EntityBlueprint\tEntityBlueprint"
			],
			[
				"Enti",
				"EntityBlueprint\tEntityBlueprint"
			],
			[
				"istrea",
				"istreambuf_iterator\tistreambuf_iterator<typename _CharT, typename _Traits>"
			],
			[
				"Trap",
				"TrapComponentBlueprint\tTrapComponentBlueprint::"
			],
			[
				"St",
				"StatsComponent"
			],
			[
				"Compo",
				"ComponentPtr\tComponentPtr"
			],
			[
				"siz",
				"size_type\tsize_type"
			],
			[
				"const",
				"const_iterator\tconst_iterator"
			],
			[
				"value_",
				"value_type\tvalue_type"
			],
			[
				"insert",
				"insert_return_type\tinsert_return_type"
			],
			[
				"Component",
				"ComponentPtr\tComponentPtr"
			],
			[
				"Com",
				"ComponentBlueprint\tComponentBlueprint"
			],
			[
				"InventoryC",
				"InventoryComponentBlueprint\tInventoryComponentBlueprint::"
			],
			[
				"Ent",
				"Entry"
			],
			[
				"stat",
				"staticGetClassName"
			],
			[
				"MO",
				"MovementComponent\tMovementComponent"
			],
			[
				"H",
				"HealthComponent"
			],
			[
				"is_",
				"is_bitset_enum"
			],
			[
				"to_",
				"to_underlying\tauto to_underlying(T value)"
			],
			[
				"is_same",
				"is_same_v\tis_same_v<typename _Tp, typename _Up>"
			],
			[
				"un",
				"underlying_type_t"
			],
			[
				"Meta",
				"MetaReader\tMetaReader::"
			],
			[
				"push",
				"pushScope"
			],
			[
				"Json",
				"JsonType\tJsonType"
			],
			[
				"strto",
				"strtol\tlong strtol(const char *, char **, int)"
			],
			[
				"json",
				"json_iterator\tjson_iterator"
			],
			[
				"convert",
				"convertOctal\tchar convertOctal(char oct)"
			],
			[
				"Render",
				"RenderSystem"
			],
			[
				"Damag",
				"DamageType"
			],
			[
				"Dama",
				"DamageRange"
			],
			[
				"is_con",
				"is_const_v\tis_const_v<typename _Tp>"
			],
			[
				"is_en",
				"is_enum_v\tis_enum_v<typename _Tp>"
			],
			[
				"MetaTy",
				"MetaTypeTemplate.hpp\tC:\\Users\\Eric\\Documents\\GitHub\\ecs-roguelike\\src\\Meta"
			],
			[
				"uno",
				"unordered_set\tc:\\mingw\\lib\\gcc\\mingw32\\8.2.0\\include\\c++"
			],
			[
				"MetaType",
				"MetaTypeTemplate_enum\tMetaTypeTemplate_enum<typename T>"
			],
			[
				"MetaTypeTem",
				"MetaTypeTemplate\tMetaTypeTemplate"
			],
			[
				"is_enum",
				"is_enum_v\tis_enum_v<typename _Tp>"
			],
			[
				"Entity",
				"EntityBlueprint\tEntityBlueprint"
			],
			[
				"EntityB",
				"EntityBlueprintId\tEntityBlueprintId"
			],
			[
				"enu",
				"enum_iterator\tenum_iterator"
			],
			[
				"enum",
				"enum_iterator\tenum_iterator"
			],
			[
				"OBJEC",
				"OBJECTIVE_CPP"
			],
			[
				"OBJECT",
				"OBJECTIVE_C"
			],
			[
				"Equip",
				"EquipmentComponent"
			],
			[
				"vect",
				"vector\tstd::vector"
			],
			[
				"equip",
				"equipment"
			],
			[
				"Cons",
				"ConsoleHeight"
			],
			[
				"Inv",
				"InventoryWidth"
			],
			[
				"In",
				"InventoryY"
			],
			[
				"Inve",
				"InventoryX"
			],
			[
				"Map",
				"MapVisibilityChangedEvent"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/cpu.cpp",
			"settings":
			{
				"buffer_size": 36562,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "inc/cpu.hpp",
			"settings":
			{
				"buffer_size": 6325,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "clang",
		"selected_items":
		[
			[
				"clang",
				"EasyClangComplete: Settings"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"sublime",
				"Preferences: SublimeGDB Settings â€“ Default"
			],
			[
				"Package control in",
				"Package Control: Install Package"
			],
			[
				"cool",
				"CoolFormat: Formatter Settings"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"packagere",
				"PackageResourceViewer: Open Resource"
			],
			[
				"pack",
				"Package Control: Install Package"
			]
		],
		"width": 444.0
	},
	"console":
	{
		"height": 456.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src"
	],
	"file_history":
	[
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/cpu.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/Instructions.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/Instructions.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/cpu.cpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/foundation/enum_iterator.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/Nes.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/apu.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/movie.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/main.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/keyboard.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/common.hpp",
		"/C/Users/Eric/Documents/GitHub/imgui/examples/example_sdl_opengl3/main.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/makefile",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/Apu.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/Apu.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/hotkeys.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/menu_elements.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/Cpu.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/Ppu.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/Ppu.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/Ram.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/apu.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/ppu.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/cartridge.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/cartridge.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/BankMapper.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/ppu.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/zapper.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/types.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/rom_loader.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/mappers/Mapper4.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/mappers/Mapper3.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/mappers/Mapper2.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/mappers/Mapper1.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/Cartridge.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/Memory.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/Header.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/Cartridge.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/mappers/Mapper1.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/debug.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/Header.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/rom_defs.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/rom_defs.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/rom_loader.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/cartridge_old.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/mappers/mapper3.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/mappers/mapper4.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/mappers/mapper2.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/mappers/mapper1.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/mappers/mapper4.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/ByteIO.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/mappers/mapper3.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/mappers/mapper2.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/mappers/mapper1.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/cartridge_old.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/mappers/mapper0.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/joypad.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/History.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/Logger.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/message.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/ppu_defs.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/config.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/lib/inc/json.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/joypad.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/globals.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/menu_elements.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/menu_bar.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/crc32.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/controller.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/pixel.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/api.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/main.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/movie.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/crc32.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/AddressMode.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/zapper.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/ppu_old.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/ppu_old.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/keyboard.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/.gitignore",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/.clang_complete",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/lib/inc/Nes_Apu.h",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/filesystem.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/cpu_old.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/src/cpu_old.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/lib/src/Nes_Apu.cpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/lib/inc/Nes_Oscs.h",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/Cpu.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/Instruction.hpp",
		"/C/Users/Eric/Documents/GitHub/cpp-NES-emulator/inc/MemoryRegion.hpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Entity/Entity.cpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Entity/Entity.hpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/project.sublime-project",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/.clang_complete",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/int128_t.hpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Actions/AttackAction.cpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Components/StatsComponent.hpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Components/StatsComponent.cpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Systems/RenderSystem.cpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/entities/player.json",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/enum_iterator.hpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Meta/MetaEnum.hpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/EnumMap.hpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Components/RenderComponent.cpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Meta/MetaTypeTemplate.cpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Meta/MetaTypes.hpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Meta/MetaReader.hpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Meta/MetaReader.cpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/flat_map.hpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Actions/Action.hpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Actions/WalkAction.cpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Actions/Action.cpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Components/TrapComponent.hpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Components/TrapComponent.cpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Components/InventoryComponent.cpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Components/HealthComponent.hpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Components/HealthComponent.cpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Components/PositionComponent.cpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/EntityBlueprint.cpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Name.hpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Name.cpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/EntityBlueprint.hpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/EntityManager.cpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Components/PositionComponent.hpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Meta/MetaTypeTemplate.hpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Systems/GameSystem.cpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Json.cpp",
		"/C/Users/Eric/Documents/GitHub/ecs-roguelike/src/Components/InventoryComponent.hpp"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 112.0,
		"where_history":
		[
			"C:\\Users\\Eric\\Documents\\GitHub\\cpp-NES-emulator\\src",
			"C:\\Users\\Eric\\Documents\\GitHub\\cpp-NES-emulator\\inc",
			"C:\\Users\\Eric\\Documents\\GitHub\\cpp-NES-emulator",
			"C:\\Users\\Eric\\Documents\\GitHub\\cpp-NES-emulator\\lib"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"setaccandx",
			"storeAccAndX",
			"andRotateRight",
			"dummyRead",
			"<AddressMode",
			"writeByte",
			"getStatusFlag",
			"readByte",
			"CPU",
			"clockTick",
			"OVERFLOW",
			"CARRY",
			"x_register",
			"setStatusFlag",
			"program_counter",
			"accumulator",
			"run_until",
			"m_apu->",
			"APU::",
			"Apu::",
			"apu_snapshot_t",
			"mouseMotionEvent",
			"clearOAM",
			"loadSpritesOnScanline",
			"size_t",
			"int",
			"m_spritesOnScanline",
			"dbLog",
			"m_header",
			") const",
			"Header::",
			"nameTableMirroring",
			"cartridge",
			"power",
			"write",
			"setCHRBank",
			"setPRGBank",
			"bank_registers",
			"bank_select",
			"irq_counter",
			"irq_latch",
			"irq_enabled",
			"setPRGBank",
			"m_chrMap.setBank",
			"m_prgMap.setBank",
			"isRamEnabled",
			"ramEnable",
			"chrBankMode",
			"prgBankMode",
			"mirrorMode",
			"nt_mirroring",
			"registers",
			"m_shiftRegister",
			"shift_register",
			"BANK_SIZE",
			"rom::",
			"logger.log",
			"m_cycle",
			"m_vramAddress",
			"loadspriteson",
			"loadspritesonscn",
			"SET_OP",
			"jump",
			"s_history",
			"exclusive",
			"std::printf",
			"VoidCpuMemberFunction",
			"stack_pointer",
			"m_cartridge",
			"m_ppu",
			"m_cpu",
			"StackOffset",
			"STACK_OFFSET",
			"STACK_START",
			"NUM_BYTE_INTERPRETATIONS",
			"clocktick",
			"read",
			"scanlinecycle",
			"read(",
			"SpritePalette",
			"writeToAddress",
			"nametableAddress",
			"nametableMirror",
			"read",
			"dbLog",
			"testFlag",
			"Sprite0Hit",
			"writetocontrol",
			"setNMI",
			"writetoscroll",
			"ppu",
			"PPU_START",
			"ppu",
			"m_supressVBlank",
			"nmi",
			"341",
			"241",
			"240",
			"261",
			"262",
			"setvblank",
			"read(",
			"writetocontrol",
			"nametableaddress",
			"m_cartridge",
			"assert",
			"ppu",
			"getSecondaryOAMSize",
			"m_screenBuffer",
			"Cartridge",
			"cartridge",
			"NULL",
			"AddressMode",
			"template <AddressMode",
			"AddressMode",
			"controller_ports",
			"m_ppu->write",
			"m_ppu->readByte",
			"m_ppu->writeByte",
			"// m_ppu",
			"->clockTick",
			"Joypad",
			"MAX_CROP",
			"joypad",
			"assert",
			"spritefli",
			"dbAssert",
			"assert"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"<Cpu::AddressMode",
			"writeByteTick",
			"testStatus",
			"readByteTick",
			"Cpu",
			"tick",
			"Overflow",
			"Carry",
			"m_xRegister",
			"setStatus",
			"m_programCounter",
			"m_accumulator",
			"m_apu->",
			"size_t",
			"uint32_t",
			"header",
			")",
			"",
			"getNameTableMirroring",
			"m_cartridge",
			"read",
			"setChrBank",
			"setPrgBank",
			"m_bankRegisters",
			"m_bankSelect",
			"m_irqCounter",
			"m_irqLatch",
			"m_irqEnabled",
			"setPrgBank",
			"setChrBank",
			"setPrgBank",
			"isRamEnabled",
			"getChrBankMode",
			"getPrgBankMode",
			"getMirrorMode",
			"m_mirroring",
			"m_registers",
			"m_shiftRegister",
			"MIN_BANK_SIZE",
			"Rom::",
			"std::printf",
			"SET_IMPLIED",
			"logger.log",
			"CpuInstruction",
			"m_stackPointer",
			"cartridge",
			"ppu",
			"cpu",
			"SpriteZeroHit",
			"dbAssertMessage",
			"getSecondaryOamSize",
			"m_pixels",
			"nullptr",
			"template <Cpu::AddressMode",
			"Cpu::AddressMode",
			"m_ppu->writeRegister",
			"m_ppu->readRegister",
			"m_ppu->write",
			"->tick",
			"nes::Joypad",
			"MaxCrop",
			"dbAssertMessage",
			"dbAssert",
			"m_cpu->",
			"s_nes",
			"DefaultCrop",
			"ScreenHeight",
			"ScreenWidth",
			"m_triggerHeld",
			"PpuRegister",
			"PPURegister",
			"m_ppu->",
			"readBytes",
			"PRERENDER_SCANLINE",
			"NmiEnable",
			"getSpriteHeight",
			"getSecondaryOamSize",
			"constexpr int",
			"Register::Status",
			"BackgroundTileSelect",
			"m_vramAddress",
			"SpriteHeight",
			"ShowSprites",
			"ShowBackground",
			"1 << \\1",
			"m_oamAddress",
			"uint8_t",
			"nes::cpu.",
			"cpu.",
			"readWordTickBug",
			"tick",
			"readByteTick",
			"readWordTick",
			"m_cycles",
			"halted",
			"",
			"cpu.",
			"readBytes",
			"cpu->",
			"ZeroPageY",
			"IndirectYStore",
			"AbsoluteYStore",
			"SET_OP( \\1, \\2 );",
			"storeY",
			"storeX",
			"storeAcc",
			"subtractFromAcc",
			"rotateRight",
			"rotateLeft",
			"bitwiseOr",
			"noOperation",
			"shiftRight",
			"Implied",
			"IndirectY",
			"IndirectX",
			"AbsoluteY",
			"AbsoluteXStore",
			"Accumulator",
			"AbsoluteX",
			"Absolute",
			"ZeroPageX",
			"ZeroPage",
			"Immediate",
			"loadY",
			"",
			"SET_ADDRMODE_OP",
			"SET_OP",
			"void \\1();"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/cpu.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 36562,
						"regions":
						{
						},
						"selection":
						[
							[
								29608,
								29608
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 24040.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "inc/cpu.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6325,
						"regions":
						{
						},
						"selection":
						[
							[
								5874,
								5874
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5029.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 74.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 107.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Makefile/Make.sublime-build",
	"project": "cpp-NES-emulator.sublime-project",
	"replace":
	{
		"height": 73.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 157.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
